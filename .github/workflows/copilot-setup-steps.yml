name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install JavaScript dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Build SPA
        run: npm run build

      - name: Verify mock server can start
        run: |
          # Start mock server in background
          npm run mock-server &
          SERVER_PID=$!
          
          # Wait for server to start
          echo "Waiting for mock server to start..."
          for i in {1..10}; do
            if curl -s http://localhost:3001/health > /dev/null; then
              echo "Mock server started successfully"
              break
            fi
            if [ $i -eq 10 ]; then
              echo "Mock server failed to start"
              exit 1
            fi
            sleep 2
          done
          
          # Test a sample endpoint
          echo "Testing sample endpoint..."
          if curl -s -H "Accept: application/vnd.api+json" http://localhost:3001/api | grep -q "Mock JSON:API server"; then
            echo "Mock server API responding correctly"
          else
            echo "Mock server API not responding as expected"
            exit 1
          fi
          
          # Clean up
          kill $SERVER_PID || true
          wait $SERVER_PID 2>/dev/null || true

      - name: Verify test script is executable
        run: |
          if [ -x "./test-endpoints.sh" ]; then
            echo "Test script is executable"
          else
            echo "Making test script executable"
            chmod +x ./test-endpoints.sh
          fi

      - name: Display setup summary
        run: |
          echo "✅ Setup completed successfully!"
          echo "📦 Dependencies installed via npm ci"
          echo "🔍 Code linting passed"
          echo "🏗️  SPA build completed"
          echo "🚀 Mock server verified functional"
          echo "🧪 Test script prepared"
          echo ""
          echo "Both the JSON:API validator SPA and mock server are ready for development and testing."